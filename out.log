source_file 0:0
variable_declaration 0:0
const 0:0
identifier 6:0
= 10:0
builtin_function 12:0
builtin_identifier 12:0
arguments 19:0
( 19:0
string 20:0
" 20:0
string_content 21:0
" 24:0
) 25:0
; 26:0
variable_declaration 0:1
const 0:1
identifier 6:1
= 12:1
builtin_function 14:1
builtin_identifier 14:1
arguments 21:1
( 21:1
string 22:1
" 22:1
string_content 23:1
" 28:1
) 29:1
; 30:1
variable_declaration 0:2
const 0:2
identifier 6:2
= 11:2
field_expression 13:2
builtin_function 13:2
builtin_identifier 13:2
arguments 20:2
( 20:2
string 21:2
" 21:2
string_content 22:2
" 30:2
) 31:2
. 32:2
identifier 33:2
; 37:2
comment 0:4
function_declaration 0:5
pub 0:5
fn 4:5
identifier 7:5
parameters 11:5
( 11:5
) 12:5
! 14:5
builtin_type 15:5
void 15:5
block 20:5
{ 20:5
variable_declaration 4:6
var 4:6
identifier 8:6
= 12:6
struct_initializer 14:6
call_expression 14:6
field_expression 14:6
field_expression 14:6
identifier 14:6
. 17:6
identifier 18:6
. 22:6
identifier 23:6
( 46:6
anonymous_struct_initializer 47:6
. 47:6
initializer_list 48:6
{ 48:6
} 49:6
) 50:6
initializer_list 51:6
{ 51:6
} 52:6
; 53:6
defer_statement 4:7
defer 4:7
block 10:7
{ 10:7
variable_declaration 8:8
const 8:8
identifier 14:8
= 28:8
call_expression 30:8
field_expression 30:8
identifier 30:8
. 33:8
identifier 34:8
( 40:8
) 41:8
; 42:8
comment 8:9
if_statement 8:10
if 8:10
( 11:10
binary_expression 12:10
identifier 12:10
== 26:10
field_expression 29:10
. 29:10
identifier 30:10
) 34:10
block_expression 36:10
block 36:10
{ 36:10
expression_statement 12:11
call_expression 12:11
field_expression 12:11
field_expression 12:11
identifier 12:11
. 15:11
identifier 16:11
. 19:11
identifier 20:11
( 23:11
string 24:11
" 24:11
string_content 25:11
" 36:11
, 37:11
anonymous_struct_initializer 39:11
. 39:11
initializer_list 40:11
{ 40:11
} 41:11
) 42:11
; 43:11
} 8:12
} 4:13
variable_declaration 4:14
const 4:14
identifier 10:14
= 20:14
call_expression 22:14
field_expression 22:14
identifier 22:14
. 25:14
identifier 26:14
( 35:14
) 36:14
; 37:14
variable_declaration 4:15
const 4:15
identifier 10:15
= 15:15
try_expression 17:15
try 17:15
call_expression 21:15
field_expression 21:15
field_expression 21:15
identifier 21:15
. 24:15
identifier 25:15
. 32:15
identifier 33:15
( 42:15
identifier 43:15
) 52:15
; 53:15
if_statement 4:16
if 4:16
( 7:16
binary_expression 8:16
field_expression 8:16
identifier 8:16
. 12:16
identifier 13:16
< 17:16
integer 19:16
) 20:16
block_expression 22:16
block 22:16
{ 22:16
expression_statement 8:17
call_expression 8:17
field_expression 8:17
field_expression 8:17
identifier 8:17
. 11:17
identifier 12:17
. 19:17
identifier 20:17
( 28:17
identifier 29:17
, 38:17
identifier 40:17
) 44:17
; 45:17
expression_statement 8:18
call_expression 8:18
field_expression 8:18
field_expression 8:18
identifier 8:18
. 11:18
identifier 12:18
. 15:18
identifier 16:18
( 19:18
string 20:18
" 20:18
string_content 21:18
escape_sequence 44:18
" 46:18
, 47:18
anonymous_struct_initializer 49:18
. 49:18
initializer_list 50:18
{ 50:18
} 51:18
) 52:18
; 53:18
expression_statement 8:19
return_expression 8:19
return 8:19
; 14:19
} 4:20
variable_declaration 4:21
const 4:21
identifier 10:21
= 19:21
try_expression 21:21
try 21:21
call_expression 25:21
field_expression 25:21
call_expression 25:21
field_expression 25:21
field_expression 25:21
identifier 25:21
. 28:21
identifier 29:21
. 31:21
identifier 32:21
( 35:21
) 36:21
. 37:21
identifier 38:21
( 51:21
identifier 52:21
, 61:21
string 63:21
" 63:21
string_content 64:21
" 65:21
) 66:21
; 67:21
variable_declaration 4:22
const 4:22
identifier 10:22
= 20:22
try_expression 22:22
try 22:22
call_expression 26:22
field_expression 26:22
field_expression 26:22
field_expression 26:22
identifier 26:22
. 29:22
identifier 30:22
. 32:22
identifier 33:22
. 37:22
identifier 38:22
( 45:22
identifier 46:22
, 55:22
unary_expression 57:22
& 57:22
anonymous_struct_initializer 58:22
. 58:22
initializer_list 59:22
{ 59:22
identifier 61:22
, 69:22
index_expression 71:22
identifier 71:22
[ 75:22
integer 76:22
] 77:22
} 79:22
) 80:22
; 81:22
defer_statement 4:23
defer 4:23
expression_statement 10:23
call_expression 10:23
field_expression 10:23
identifier 10:23
. 19:23
identifier 20:23
( 24:23
identifier 25:23
) 34:23
; 35:23
expression_statement 4:24
call_expression 4:24
field_expression 4:24
identifier 4:24
. 13:24
identifier 14:24
( 18:24
identifier 19:24
) 27:24
; 28:24
expression_statement 4:25
call_expression 4:25
field_expression 4:25
field_expression 4:25
identifier 4:25
. 7:25
identifier 8:25
. 15:25
identifier 16:25
( 24:25
identifier 25:25
, 34:25
identifier 36:25
) 40:25
; 41:25
comment 4:26
variable_declaration 4:27
var 4:27
identifier 8:27
= 12:27
try_expression 14:27
try 14:27
call_expression 18:27
field_expression 18:27
identifier 18:27
. 22:27
identifier 23:27
( 27:27
identifier 28:27
, 37:27
identifier 39:27
) 48:27
; 49:27
defer_statement 4:28
defer 4:28
expression_statement 10:28
call_expression 10:28
field_expression 10:28
identifier 10:28
. 13:28
identifier 14:28
( 20:28
) 21:28
; 22:28
comment 4:29
expression_statement 4:30
try_expression 4:30
try 4:30
call_expression 8:30
field_expression 8:30
identifier 8:30
. 11:30
identifier 12:30
( 15:30
) 16:30
; 17:30
} 0:31
test_declaration 0:33
test 0:33
string 5:33
" 5:33
string_content 6:33
" 17:33
block 19:33
{ 19:33
expression_statement 4:34
call_expression 4:34
field_expression 4:34
field_expression 4:34
builtin_function 4:34
builtin_identifier 4:34
arguments 11:34
( 11:34
string 12:34
" 12:34
string_content 13:34
" 16:34
) 17:34
. 18:34
identifier 19:34
. 26:34
identifier 27:34
( 38:34
builtin_function 39:34
builtin_identifier 39:34
arguments 44:34
( 44:34
) 45:34
) 46:34
; 47:34
} 0:35
